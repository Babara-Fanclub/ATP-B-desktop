# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Lint

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]

jobs:
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ESLint
        run: npm install --dev

      - name: Run ESLint
        run: npx eslint .

  clippy:
    name: Checking Rust using Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Installing Dependencies
        run: |
          sudo apt update
          # Upgrading Packages
          sudo apt upgrade
          # Tauri Packages
          sudo apt install libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          # Serial Packages
          sudo apt install -y libudev-dev
          # Protobuf Packages
          sudo apt install -y protobuf-compiler

      - name: Download Map Data
        uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0
        id: downloadfile  # Remember to give an ID if you need the output filename
        with:
          url: "${{ secrets.MAP_DATA }}"
          target: src-tauri/data.mbtiles
          
      - name: Run Clippy
        run: |
          cd src-tauri/
          cargo clippy
